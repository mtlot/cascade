-- FGA Policy Creator for LIS, LOV, INTG schemas
SET SERVEROUT ON SIZE UNLIMITED
DECLARE
  v_policy_name VARCHAR2(30);
  
  CURSOR c_tables IS
    SELECT owner, table_name
    FROM dba_tables t
    WHERE owner IN (
        SELECT username 
        FROM dba_users 
        WHERE username LIKE 'LIS%' 
           OR username LIKE 'LOV%' 
           OR username LIKE 'INTG%'
    )
    AND table_name NOT LIKE 'BIN$%'
    AND owner NOT IN ('SYS','SYSTEM')
    AND temporary = 'N'
    ORDER BY owner, table_name;
    
BEGIN
  DBMS_OUTPUT.PUT_LINE('Starting FGA policy creation...');
  DBMS_OUTPUT.PUT_LINE('----------------------------------');
  
  FOR tab IN c_tables LOOP
    BEGIN
      -- Generate policy name (max 30 chars)
      v_policy_name := 'FGA_' || 
                      SUBSTR(REGEXP_REPLACE(tab.owner, '[^A-Z0-9]', ''), 1, 10) || '_' || 
                      SUBSTR(REGEXP_REPLACE(tab.table_name, '[^A-Z0-9]', ''), 1, 15);
      
      -- Create policy
      EXECUTE IMMEDIATE 
        'BEGIN DBMS_FGA.ADD_POLICY(' ||
        'object_schema   => :1, ' ||
        'object_name     => :2, ' ||
        'policy_name     => :3, ' ||
        'statement_types => ''INSERT,UPDATE,DELETE'', ' ||
        'enable         => TRUE, ' ||
        'audit_trail    => DBMS_FGA.DB_EXTENDED); END;'
      USING tab.owner, tab.table_name, v_policy_name;
      
      -- Only show successful creations
      DBMS_OUTPUT.PUT_LINE('+ ' || tab.owner || '.' || tab.table_name || 
                          ' â†’ Policy: ' || v_policy_name);
      
    EXCEPTION WHEN OTHERS THEN
      NULL; -- Silently skip errors
    END;
  END LOOP;
  
  COMMIT;
END;
/

-- Verify created policies (optional)
SELECT 
    object_owner as owner,
    object_name,
    policy_name,
    enabled
FROM 
    dba_audit_policies
WHERE 
    policy_name LIKE 'FGA_%'
    AND object_owner IN ('LIS','LOV','INTG')
ORDER BY 
    object_owner, 
    object_name;
